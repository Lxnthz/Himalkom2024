import { Extension } from '@tiptap/core';
export interface TypographyOptions {
    emDash: false | string;
    ellipsis: false | string;
    openDoubleQuote: false | string;
    closeDoubleQuote: false | string;
    openSingleQuote: false | string;
    closeSingleQuote: false | string;
    leftArrow: false | string;
    rightArrow: false | string;
    copyright: false | string;
    trademark: false | string;
    servicemark: false | string;
    registeredTrademark: false | string;
    oneHalf: false | string;
    plusMinus: false | string;
    notEqual: false | string;
    laquo: false | string;
    raquo: false | string;
    multiplication: false | string;
    superscriptTwo: false | string;
    superscriptThree: false | string;
    oneQuarter: false | string;
    threeQuarters: false | string;
}
export declare const emDash: (override?: string) => import("@tiptap/core").InputRule;
export declare const ellipsis: (override?: string) => import("@tiptap/core").InputRule;
export declare const openDoubleQuote: (override?: string) => import("@tiptap/core").InputRule;
export declare const closeDoubleQuote: (override?: string) => import("@tiptap/core").InputRule;
export declare const openSingleQuote: (override?: string) => import("@tiptap/core").InputRule;
export declare const closeSingleQuote: (override?: string) => import("@tiptap/core").InputRule;
export declare const leftArrow: (override?: string) => import("@tiptap/core").InputRule;
export declare const rightArrow: (override?: string) => import("@tiptap/core").InputRule;
export declare const copyright: (override?: string) => import("@tiptap/core").InputRule;
export declare const trademark: (override?: string) => import("@tiptap/core").InputRule;
export declare const servicemark: (override?: string) => import("@tiptap/core").InputRule;
export declare const registeredTrademark: (override?: string) => import("@tiptap/core").InputRule;
export declare const oneHalf: (override?: string) => import("@tiptap/core").InputRule;
export declare const plusMinus: (override?: string) => import("@tiptap/core").InputRule;
export declare const notEqual: (override?: string) => import("@tiptap/core").InputRule;
export declare const laquo: (override?: string) => import("@tiptap/core").InputRule;
export declare const raquo: (override?: string) => import("@tiptap/core").InputRule;
export declare const multiplication: (override?: string) => import("@tiptap/core").InputRule;
export declare const superscriptTwo: (override?: string) => import("@tiptap/core").InputRule;
export declare const superscriptThree: (override?: string) => import("@tiptap/core").InputRule;
export declare const oneQuarter: (override?: string) => import("@tiptap/core").InputRule;
export declare const threeQuarters: (override?: string) => import("@tiptap/core").InputRule;
export declare const Typography: Extension<TypographyOptions, any>;
